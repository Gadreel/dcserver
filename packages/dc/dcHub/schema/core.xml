<Schema>

	<!-- general purpose descriptions of records or lists or types -->
	<Shared>
		<!-- core scalar types -->

		<StringType Id="String">
			<StringRestriction MaxLength="16000000" />
		</StringType>

		<StringType Id="BigString" />

		<NumberType Id="Integer" Class="dcraft.struct.scalar.IntegerStruct">
			<!--
				min and max are compatible with JS safe min and max, +/- ~9 quadrillion
				https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isSafeInteger
			-->
			<NumberRestriction Conform="Integer" Min="-9007199254740991" Max="9007199254740991" />
		</NumberType>

		<NumberType Id="BigInteger" Class="dcraft.struct.scalar.BigIntegerStruct">
			<NumberRestriction Conform="BigInteger" />
		</NumberType>

		<NumberType Id="Decimal" Class="dcraft.struct.scalar.DecimalStruct">
			<NumberRestriction Conform="Decimal" />
		</NumberType>

		<NumberType Id="BigDecimal" Class="dcraft.struct.scalar.DecimalStruct">
			<NumberRestriction Conform="BigDecimal" />
		</NumberType>

		<NumberType Id="Number" Class="dcraft.struct.scalar.DecimalStruct">
			<NumberRestriction Conform="BigDecimal" />
		</NumberType>

		<BooleanType Id="Boolean" />

		<BinaryType Id="Binary" />

		<!-- as per database, need date/time stuff for services also - when and where the services obey the locale/timezone context -->
		<StringType Id="Time">
			<!-- StringRestriction Pattern="([01]?[0-9]|2[0-3])(:[0-5][0-9])?(:[0-5][0-9])?(\.\d{3})?" / -->
		</StringType>

		<StringType Id="TimeRange">
			<StringRestriction Pattern="((([01]?[0-9]|2[0-3])(:[0-5][0-9])?|(24(:00)?))\s?-\s?(([01]?[0-9]|2[0-3])(:[0-5][0-9])?|(24(:00)?)))" />
		</StringType>

		<StringType Id="Date">
			<!-- StringRestriction Pattern="\d{4}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])" / -->
		</StringType>

		<StringType Id="DateMDY">
			<StringRestriction Pattern="(0[1-9]|1[012])\/(0[1-9]|[12][0-9]|3[01])\/\d{4}" />
		</StringType>

		<StringType Id="LocalDate" Class="dcraft.struct.scalar.DateStruct">
			<StringRestriction Pattern="\d{4}[/-]?(0[1-9]|1[012])[/-]?(0[1-9]|[12][0-9]|3[01])" />
		</StringType>

		<StringType Id="LocalTime" Class="dcraft.struct.scalar.TimeStruct">
			<StringRestriction Pattern="([01]?[0-9]|2[0-3])(:[0-5][0-9])?(:[0-5][0-9])?(\.\d{3})?" />
		</StringType>

		<StringType Id="DateTime" Class="dcraft.struct.scalar.DateTimeStruct">
			<StringRestriction Pattern="\d{4}(0[1-9]|1[012])(0[1-9]|[12][0-9]|3[01])T(0[0-9]|1[0-9]|2[0-4])([0-5][0-9])([0-5][0-9])(\d{3})?Z" />
		</StringType>

		<StringType Id="BigDateTime" Class="dcraft.struct.scalar.BigDateTimeStruct">
			<StringRestriction Pattern="t\d{11,21}" />
		</StringType>

		<StringType Id="Id">
			<StringRestriction Pattern="\d{5}_\d{15}" />
			<StringRestriction Pattern="\d{1,25}" />
		</StringType>

		<!-- a flag in databases to indicate that while this is treated as string, it contains JSON -->
		<!-- TODO add JSON validation scripts, replace hardcoded approach -->
		<StringType Id="Json" Searchable="False" />

		<!-- a flag in databases to indicate that while this is treated as string, it contains XML -->
		<StringType Id="Xml" Searchable="False" />

		<NullType Id="Null" />

		<AnyType Id="Any" />

		<StringType Id="MessageLevelEnum">
			<StringRestriction Enum="Error,Warn,Info,Debug,Trace,Exit" />
		</StringType>

		<StringType Id="TaskAuditLevelEnum">
			<StringRestriction Enum="Failure,Success" />
		</StringType>

		<!-- common scalar types -->

		<StringType Id="dcTinyString">
			<StringRestriction MaxLength="64" />
		</StringType>

		<StringType Id="dcAuthToken">
			<!-- TODO define the pattern -->
			<StringRestriction MaxLength="64" />
		</StringType>

		<StringType Id="dcSmallString">
			<StringRestriction MaxLength="250" />
		</StringType>

		<StringType Id="dcString">
			<StringRestriction MaxLength="4000" />
		</StringType>

		<StringType Id="dcLargeString">
			<StringRestriction MaxLength="32000" />
		</StringType>

		<StringType Id="dcUsername" Searchable="False">
			<StringRestriction MaxLength="64" />
		</StringType>

		<StringType Id="dcPath" Searchable="False">
			<StringRestriction MaxLength="4000" />
		</StringType>

		<StringType Id="dcMetaString" Searchable="False">
			<StringRestriction MaxLength="128" />
		</StringType>

		<StringType Id="dcHubId">
			<StringRestriction Pattern="\d{5}" />
		</StringType>

		<StringType Id="dcEmail" Searchable="False">
			<StringRestriction Pattern="(([^<>()\[\]\\.,;:\s@\&quot;]+(\.[^<>()\[\]\\.,;:\s@\&quot;]+)*)|(\&quot;.+\&quot;))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))" MaxLength="64" />
		</StringType>

		<StringType Id="dcEmailBasic" Searchable="False">
			<StringRestriction MaxLength="64" />
		</StringType>

		<StringType Id="dcUsaState" Searchable="True">
			<StringRestriction Pattern="((A[LKZR])|(C[AOT])|(D[EC])|(FL)|(GA)|(HI)|(I[DLNA])|(K[SY])|(LA)|(M[EDAINSOT])|(N[EVHJMYCD])|(O[HKR])|(PA)|(RI)|(S[CD])|(T[NX])|(UT)|(V[TA])|(W[AVIY]))" />
		</StringType>

		<StringType Id="dcUsaZip" Searchable="True">
			<StringRestriction Pattern="(\d{5}-\d{4}|\d{5})" />
		</StringType>

		<StringType Id="dcUserNoticeEnum">
			<StringRestriction Enum="email,text,none" />
		</StringType>

		<!-- core composite types -->

		<List Id="List" Type="Any" />
		<List Id="AnyList" Type="Any" />
		<Record Id="Record" Type="Any" />
		<Record Id="AnyRecord" Type="Any" />

		<List Id="dcTinyStrings" Type="dcTinyString" />

		<!-- common record types -->

		<Record Id="LogMessage">
			<Field Name="TaskId" Type="dcTinyString" />
			<Field Name="Level" Type="MessageLevelEnum" />
			<Field Name="Code" Type="Integer" />
			<Field Name="Message" Type="dcString" />
			<Field Name="Occurred" Type="dcTinyString" />
			<Field Name="Tags">
				<List Type="dcTinyString" />
			</Field>
		</Record>

		<!-- UserCredentials may be overriden by customer (install) to reflect their credentialing system -->
		<Record Id="UserCredentials">
			<Field Name="Username" Type="dcUser:dcUsername" />
			<Field Name="Password" Type="dcUser:dcPassword" />
			<!--
			<Field Name="ConfirmationCode" Type="dcUser:dcConfirmCode" />
			<Field Name="AccessCode" Type="dcTinyString" />
			<Field Name="SessionId" Type="dcTinyString" />
			-->
			<!-- caller does not set this, it is set by the connection code after verifying the client key (or Verified = false if not)  -->
			<!--  - ThumbPrint for login is automatically set by server using the TLS or SSH client key
				  - server must have a copy of all possible client public keys with which to verify the client key
				  - only the thumbprint is passed to the Auth module - presence of ThumbPrint means it was verified by server
			-->
			<Field Name="ClientKeyPrint" Type="dcSmallString" />
		</Record>

		<Record Id="UserContext">
			<Field Name="UserId" Type="Id" />
			<Field Name="Username" Type="dcUser:dcUsername" Required="True" />
			<Field Name="FirstName" Type="dcSmallString" />
			<Field Name="LastName" Type="dcSmallString" />
			<Field Name="Email" Type="dcUser:dcEmail" />
			<Field Name="AuthToken" Type="dcAuthToken" />
			<Field Name="Locale">
			 	<List Type="dcTinyString" />
			</Field>
			<Field Name="Chronology">
			 	<List Type="dcTinyString" />
			</Field>
			<Field Name="Tenant" Type="dcSmallString" Required="True" />
			<Field Name="Site" Type="dcSmallString" Required="True" />
			<Field Name="Badges">
				<List Type="dcTinyString" />
			</Field>
		</Record>

		<Record Id="Controller">
			<Field Name="Id" Type="dcTinyString" Required="True" />
			<Field Name="SequenceNumber" Type="dcSmallString" />
			<Field Name="Variables" Type="AnyRecord" />
			<Field Name="Messages">
				<List Type="LogMessage" />
			</Field>
			<!-- because of WebController - remove these when we remove WC -->
			<Field Name="Response" Type="AnyRecord" />
			<Field Name="Request" Type="AnyRecord" />
		</Record>

		<Record Id="OperationContext">
			<Field Name="Id" Type="dcTinyString" Required="True" />
			<Field Name="User" Type="UserContext" Required="True" />
			<Field Name="Locale" Type="dcSmallString" />
			<Field Name="Chronology" Type="dcSmallString" />
			<Field Name="SessionId" Type="dcTinyString" />
			<Field Name="Origin" Type="dcSmallString" />
			<Field Name="DebugLevel" Type="dcTinyString" />
			<Field Name="Variables" Type="AnyRecord" />
			<Field Name="Controller" Type="Controller" />

			<!-- these are for Task Context -->
			<Field Name="Params" Type="Any" />
			<Field Name="Result" Type="Any" />
			<Field Name="ExitCode" Type="Integer" />
			<Field Name="ExitMessage" Type="String" />
		</Record>

		<Record Id="Task">
			<Field Name="Id" Type="dcTinyString" Required="True" />
			<Field Name="Title" Type="dcTinyString" Required="True" />
			<Field Name="RunStamp" Type="dcTinyString" Required="True" />
			<Field Name="Topic" Type="dcTinyString" Required="True" />
			<Field Name="OriginNodeId" Type="dcTinyString" Required="True" />
			<Field Name="TargetNodeId" Type="dcTinyString" />
			<Field Name="DebugLevel" Type="dcTinyString" />
			<Field Name="Params" Type="Any" />
			<Field Name="ScriptPath" Type="dcString" />
			<Field Name="WorkClassname" Type="dcSmallString" />
			<Field Name="Context" Type="OperationContext" Required="True" />
			<Field Name="Hints" Type="Any" />
			<Field Name="Deadline" Type="Integer" />
			<Field Name="Tags">
				<List Type="dcTinyString" />
			</Field>
			<Field Name="Observers">
				<List>
					<Record>
						<Field Name="Classname" Type="dcSmallString" />
					</Record>
				</List>
			</Field>
			<Field Name="Timeout" Type="Integer" />
			<Field Name="MaxTries" Type="Integer" />
			<Field Name="Throttle" Type="Integer" />

			<!-- work queue only -->
			<Field Name="ClaimPath" Type="dcString" />
			<Field Name="ClaimId" Type="dcTinyString" />
			<Field Name="RunId" Type="dcTinyString" />
		</Record>

		<Record Id="TaskAudit">
			<Field Name="Status" Type="TaskAuditLevelEnum" />
			<Field Name="Code" Type="Integer" />
			<Field Name="Message" Type="dcString" />
			<Field Name="Trigger" Type="dcTinyString" />
		</Record>

		<Record Id="Locale">
			<Field Name="Name" Type="dcTinyString" Required="True" />
			<Field Name="Tokens">
				<List>
					<Record>
						<Field Name="Key" Type="dcTinyString" Required="True" />
						<Field Name="Value" Type="String" Required="True" />
					</Record>
				</List>
			</Field>
		</Record>

		<Record Id="RpcMessage">
			<Field Name="Service" Type="dcSmallString" Required="True" />
			<Field Name="Feature" Type="dcTinyString" />
			<Field Name="Op" Type="dcTinyString" />

			<Field Name="Body" Type="Any" />

			<!-- may contain request -->
			<!-- version of the service requested -->
			<Field Name="Version" Type="dcTinyString" />
			<Field Name="RespondTag" Type="dcTinyString" />

			<!-- may contain response -->
			<Field Name="Messages">
				<List Type="ResultMessage" />
			</Field>
		</Record>

		<!--
		<Record Id="dcSearchResult">
			<Field Name="Table" Type="dcTinyString" />
			<Field Name="Id" Type="dcTinyString" />
			<Field Name="Score" Type="Integer" />
			<Field Name="Title" Type="String" />
			<Field Name="TitlePositions">
				<List Type="Integer" />
			</Field>
			<Field Name="Body" Type="String" />
			<Field Name="BodyPositions">
				<List Type="Integer" />
			</Field>
		</Record>

		<Record Id="dcWorkQueueClaim">
			- claim -
			<Field Name="TaskIdentity" Type="dcTinyString" Required="True" />
			<Field Name="WorkId" Type="Integer" Required="True" />
			<Field Name="ClaimedStamp" Type="dcTinyString" Required="True" />
		</Record>

		<Record Id="dcWorkQueueInfo" Inherits="dcWorkQueueClaim">
			- load work -
			<Field Name="Title" Type="dcTinyString" Required="True" />
			<Field Name="Status" Type="dcTinyString" Required="True" />
			<Field Name="AddStamp" Type="dcTinyString" />
			<Field Name="Workpool" Type="dcTinyString" />
			<Field Name="Squad" Type="dcTinyString" />
			<Field Name="HubId" Type="dcTinyString" />
			<Field Name="Builder" Type="String" Required="True" />
			<Field Name="Tag1" Type="dcTinyString" />
			<Field Name="Tag2" Type="dcTinyString" />
			<Field Name="Tag3" Type="dcTinyString" />
			<Field Name="CurrentTry" Type="Integer" Required="True" />
			<Field Name="MaxTries" Type="Integer" Required="True" />

			- start work -
			<Field Name="AuditId" Type="Integer" />
		</Record>
		-->

		<Record Id="dcsCallService" Class="dcraft.script.schema.CallService">
			<Field Name="Service" Type="dcSmallString" />
			<Field Name="Feature" Type="dcSmallString" />
			<Field Name="Op" Type="dcSmallString" />
			<Field Name="Params" Type="AnyType" />
		</RecordRequest>
	</Shared>

	<Services>
		<Service Name="dcStatus">
			<Feature Name="Test">
				<Secure Badges="User">
					<Op Name="Tickle">
						<Description>
							No reply, just generates a message on the server.
						</Description>
						<Request Type="String" />
					</Op>
				</Secure>
				<Secure Badges="Admin">
					<Op Name="Echo">
						<Description>
							Returns the text send to it.
						</Description>
						<Request Type="String" Required="True" />
						<Response Type="String" />
					</Op>
					<Op Name="EchoReverse">
						<Description>
							Returns the reversed text send to it.
						</Description>
						<Request Type="String" Required="True" />
						<Response Type="String" />
					</Op>
				</Secure>
			</Feature>
			<Feature Name="Translate">
				<Secure Badges="SysAdmin">
					<Op Name="Text">
						<Description>
							Returns a translation of the text, if possible.
						</Description>
						<RecordRequest Required="True">
							<Field Name="From" Type="String" Required="True" />
							<Field Name="To" Type="String" Required="True" />
							<Field Name="Text" Type="String" Required="True" />
						</RecordRequest>
						<Response Type="String" />
					</Op>
					<Op Name="TextStream">
						<Description>
							Returns a translation of the text, one record at a time.
						</Description>
						<RecordRequest Required="True">
							<Field Name="From" Type="String" Required="True" />
							<Field Name="To" Type="String" Required="True" />
						</RecordRequest>
						<RequestStream>
							<Field Name="Text" Type="String" Required="True" />
						</RequestStream>
						<ResponseStream>
							<Field Name="Text" Type="String" Required="True" />
						</ResponseStream>
					</Op>
				</Secure>
			</Feature>
			<Feature Name="Info">
				<Secure Badges="SysAdmin">
					<Op Name="Test">
						<Description>
							Returns your verified user id.
						</Description>
						<RecordResponse>
							<Field Name="UserId" Type="Id" Required="True" />
						</RecordResponse>
					</Op>
					<Op Name="Version">
						<Description>
							Get hub version number.
						</Description>
						<RecordResponse>
							<Field Name="App" Type="dcSmallString" />
							<Field Name="Version" Type="dcSmallString" />
						</RecordResponse>
					</Op>
					<Op Name="HubStatus">
						<Description>
							Returns info about the work pools, work queues and sessions on the hub.
						</Description>
						<RecordResponse>
							<Field Name="ServerIdled" Type="Boolean" />
							<Field Name="WorkPool">
								<Record>
									<Field Name="Queued" Type="Integer" />
									<Field Name="Threads" Type="Integer" />
									<Field Name="ThreadsCreated" Type="Integer" />
									<Field Name="ThreadsHung" Type="Integer" />
									<Field Name="Topics">
										<List>
											<Record>
												<Field Name="Name" Type="dcTinyString" />
												<Field Name="InProgress" Type="Integer" />
												<Field Name="Backlogged" Type="Integer" />
												<Field Name="MaxSize" Type="Integer" />
											</Record>
										</List>
									</Field>
								</Record>
							</Field>
							<Field Name="WorkQueue">
								<List>
									<Record>
										<Field Name="Id" Type="Id" />
										<Field Name="TaskIdentity" Type="dcTinyString" />
										<Field Name="Title" Type="dcSmallString" />
										<Field Name="Status" Type="dcTinyString" />
										<Field Name="Added" Type="dcTinyString" />
										<Field Name="ClaimedAt" Type="dcTinyString" />
										<Field Name="ClaimedBy" Type="dcTinyString" />
										<Field Name="LastTry" Type="Integer" />
										<Field Name="MaxTry" Type="Integer" />
										<Field Name="ClaimTimeout" Type="Integer" />
										<Field Name="Audit">
											<List>
												<Record>
													<Field Name="Try" Type="Integer" />
													<Field Name="Hub" Type="dcTinyString" />
													<Field Name="Code" Type="Integer" />
													<Field Name="Message" Type="String" />
												</Record>
											</List>
										</Field>
									</Record>
								</List>
							</Field>
							<Field Name="Sessions">
								<List>
									<Record>
										<Field Name="Id" Type="dcTinyString" />
										<Field Name="Key" Type="dcTinyString" />
										<Field Name="LastAccess" Type="dcTinyString" />
										<Field Name="UserContext" Type="UserContext" />
										<Field Name="DebugLevel" Type="MessageLevelEnum" />
										<Field Name="Origin" Type="dcTinyString" />
										<Field Name="Keep" Type="Boolean" />
										<Field Name="Tasks">
											<List>
												<Record>
													<Field Name="Id" Type="dcTinyString" />
													<Field Name="Title" Type="dcTinyString" />
													<Field Name="Tags">
														<List Type="dcTinyString" />
													</Field>
													<Field Name="Completed" Type="Boolean" />
												</Record>
											</List>
										</Field>
									</Record>
								</List>
							</Field>
						</RecordResponse>
					</Op>
					<Op Name="TaskStatus">
						<Description>
							Returns info about a task.
						</Description>
						<ListRequest Required="True">
							<Record>
								<Field Name="TaskId" Type="dcTinyString" />
								<Field Name="WorkId" Type="dcTinyString" />
							</Record>
						</ListRequest>
						<ListResponse>
							<Record>
								<Field Name="TaskId" Type="dcTinyString" />
								<Field Name="WorkId" Type="dcTinyString" />

								<Field Name="Title" Type="dcSmallString" />
								<Field Name="Status" Type="dcTinyString" />
								<Field Name="Added" Type="dcTinyString" />
								<Field Name="MaxTry" Type="Integer" />

								<Field Name="Start" Type="dcTinyString" />
								<Field Name="End" Type="dcTinyString" />
								<Field Name="Hub" Type="dcTinyString" />

								<Field Name="Try" Type="Integer" />
								<Field Name="Code" Type="Integer" />
								<Field Name="Message" Type="String" />
								<Field Name="Log" Type="String" />
								<Field Name="Progress" Type="String" />
								<Field Name="StepName" Type="String" />
								<Field Name="Completed" Type="Integer" />
								<Field Name="Step" Type="Integer" />
								<Field Name="Steps" Type="Integer" />
							</Record>
						</ListResponse>
					</Op>
				</Secure>
			</Feature>
			<Feature Name="Management">
				<Secure Badges="SysAdmin">
					<Op Name="IdleOn">
						<Description>
							Set the idle mode on the server.
						</Description>
					</Op>
					<Op Name="IdleOff">
						<Description>
							Set the idle mode on the server.
						</Description>
					</Op>
				</Secure>
			</Feature>
		</Service>

		<Service Name="dcSessions">
			<Feature Name="Manager">
				<Secure Badges="Admin">
					<Op Name="Touch">
						<Description>
							Keep a session alive - send and forget is fine.
						</Description>
						<Request Type="dcTinyString" Required="True" />
					</Op>
					<Op Name="DebugLevel">
						<Description>
							Keep a session alive - send and forget is fine.
						</Description>
						<RecordRequest Required="True">
							<Field Name="Session" Type="dcTinyString" Required="True" />
							<Field Name="Level" Type="MessageLevelEnum" Required="True" />
						</RecordRequest>
					</Op>
					<Op Name="LoadUser">
						<Description>
							Keep a session alive - send and forget is fine.
						</Description>
						<Request Type="dcTinyString" Required="True" />
						<RecordResponse Inherits="UserContext" />
					</Op>
				</Secure>
			</Feature>
			<Feature Name="Session">
				<Secure Badges="Guest,User">
					<Op Name="TouchMe">
						<Description>
							Keep a session alive - send and forget is fine.
						</Description>
					</Op>
					<Op Name="DebugLevelMe">
						<Description>
							Set my debug level.
						</Description>
						<Request Type="MessageLevelEnum" Required="True" />
					</Op>
					<Op Name="LoadMe">
						<Description>
							Load my user record.
						</Description>
						<RecordResponse Inherits="UserContext" />
					</Op>
				</Secure>
			</Feature>
		</Service>

		<Service Name="dcCoreServices">
			<Feature Name="Authentication">
				<Secure Badges="Guest,User">
					<Op Name="SignIn">
						<Description>
							Verify credentials, start a session (AuthToken) indirectly as Verify is called implicitly.
						</Description>
						<RecordRequest Required="True">
							<Field Name="Username" Type="dcUser:dcUsername" />
							<Field Name="Password" Type="dcUser:dcPassword" />
						</RecordRequest>
						<RecordResponse>
							<Field Name="UserId" Type="Id" />
							<Field Name="Username" Type="dcUser:dcUsername" />
							<Field Name="FirstName" Type="dcUser:dcFirstName" />
							<Field Name="LastName" Type="dcUser:dcLastName" />
							<Field Name="Email" Type="dcUser:dcEmail" />
							<Field Name="Locale">
								<List Type="dcUser:dcLocale" />
							</Field>
							<Field Name="Chronology">
								<List Type="dcUser:dcChronology" />
							</Field>
							<Field Name="Badges">
								<List Type="dcUser:dcBadges" />
							</Field>
						</RecordResponse>
					</Op>
					<Op Name="Confirm">
						<Description>
							Confirm an account.
						</Description>
						<RecordRequest Required="True">
							<Field Name="Uuid" Type="dcMetaString" />
							<Field Name="Code" Type="dcMetaString" />
						</RecordRequest>
						<RecordResponse>
							<Field Name="UserId" Type="Id" />
							<Field Name="Username" Type="dcUser:dcUsername" />
							<Field Name="FirstName" Type="dcUser:dcFirstName" />
							<Field Name="LastName" Type="dcUser:dcLastName" />
							<Field Name="Email" Type="dcUser:dcEmail" />
							<Field Name="Locale">
								<List Type="dcUser:dcLocale" />
							</Field>
							<Field Name="Chronology">
								<List Type="dcUser:dcChronology" />
							</Field>
							<Field Name="Badges">
								<List Type="dcUser:dcBadges" />
							</Field>
						</RecordResponse>
					</Op>
					<Op Name="Recover">
						<Description>
							Verify credentials, start a session (AuthToken) indirectly as Verify is called implicitly.
						</Description>
						<RecordRequest Required="True">
							<Field Name="Uuid" Type="dcMetaString" />
							<Field Name="Code" Type="dcMetaString" />
						</RecordRequest>
						<RecordResponse>
							<Field Name="UserId" Type="Id" />
							<Field Name="Username" Type="dcUser:dcUsername" />
							<Field Name="FirstName" Type="dcUser:dcFirstName" />
							<Field Name="LastName" Type="dcUser:dcLastName" />
							<Field Name="Email" Type="dcUser:dcEmail" />
							<Field Name="Locale">
								<List Type="dcUser:dcLocale" />
							</Field>
							<Field Name="Chronology">
								<List Type="dcUser:dcChronology" />
							</Field>
							<Field Name="Badges">
								<List Type="dcUser:dcBadges" />
							</Field>
						</RecordResponse>
					</Op>
					<Op Name="FacebookSignIn">
						<Description>
							Verify credentials, start a session (AuthToken) indirectly as Verify is called implicitly.
						</Description>
						<RecordRequest Required="True">
							<Field Name="Token" Type="dcString" Required="True" />
						</RecordRequest>
						<RecordResponse>
							<Field Name="UserId" Type="Id" />
							<Field Name="Username" Type="dcUser:dcUsername" />
							<Field Name="FirstName" Type="dcUser:dcFirstName" />
							<Field Name="LastName" Type="dcUser:dcLastName" />
							<Field Name="Email" Type="dcUser:dcEmail" />
							<Field Name="Locale">
								<List Type="dcUser:dcLocale" />
							</Field>
							<Field Name="Chronology">
								<List Type="dcUser:dcChronology" />
							</Field>
							<Field Name="Badges">
								<List Type="dcUser:dcBadges" />
							</Field>
						</RecordResponse>
					</Op>
					<Op Name="SignOut">
						<Description>
							End a session (AuthToken).
						</Description>
					</Op>
					<Op Name="Verify">
						<Description>
							Verify auth token if present - if not try credentials, start a new session (AuthToken).
						</Description>
					</Op>
				</Secure>
				<Secure Badges="User">
					<Op Name="LinkFacebookAccount">
						<Description>
							Link a Facebook account to the current account (only one account supported, overwrites).
						</Description>
						<RecordRequest Required="True">
							<Field Name="Token" Type="dcString" />
						</RecordRequest>
					</Op>
				</Secure>
			</Feature>

			<Feature Name="Management">
				<Secure Badges="SysAdmin">
					<Op Name="UpdateTenants">
						<Description>
							Reload a Tenant entry in TenantHub.
						</Description>
						<ListRequest Required="True" Type="dcTenant:dcAlias" />
					</Op>
					<Op Name="UpdateCore">
						<Description>
							Reload the core resources and then reload all tenants in TenantHub.
						</Description>
						<ListRequest Required="True" Type="dcTenant:dcAlias" />
					</Op>
					<Op Name="Backup">
						<Description>
							Standard backup for logs, database and file sync.
						</Description>
					</Op>
				</Secure>
			</Feature>

			<Feature Name="Users">
				<Secure Badges="User,Guest">
					<Op Name="InitiateConfirm">
						<Description>
							Request a confirmation code.
						</Description>
						<RecordRequest Required="True">
							<Field Name="Username" Type="dcSmallString" Required="True" />
						</RecordRequest>
					</Op>
					<Op Name="InitiateRecovery">
						<Description>
							Request a confirmation code.
						</Description>
						<RecordRequest Required="True">
							<Field Name="Captcha" Type="dcString" />
							<Field Name="Username" Type="dcSmallString" Required="True" />
						</RecordRequest>
					</Op>
					<Op Name="SignUp">
						<Description>
							Verify credentials, start a session (AuthToken) indirectly as Verify is called implicitly.
						</Description>
						<RecordRequest Required="True">
							<Field Name="Captcha" Type="dcString" />
							<Field Name="Username" Type="dcUser:dcUsername" />
							<Field Name="FirstName" Type="dcUser:dcFirstName" />
							<Field Name="LastName" Type="dcUser:dcLastName" />
							<Field Name="Email" Type="dcUser:dcEmail" />
							<Field Name="Phone" Type="dcUser:dcPhone" />
							<Field Name="Notices" Type="dcUser:dcNotices" />
							<Field Name="Password" Type="dcUser:dcPassword" />
							<Field Name="Address" Type="dcUser:dcAddress" />
							<Field Name="Address2" Type="dcUser:dcAddress2" />
							<Field Name="City" Type="dcUser:dcCity" />
							<Field Name="State" Type="dcUser:dcState" />
							<Field Name="Zip" Type="dcUser:dcZip" />
							<Field Name="Extra" Type="AnyRecord" />
						</RecordRequest>
						<RecordResponse>
							<Field Name="Uuid" Type="dcString" />
							<Field Name="UserId" Type="Id" />
						</RecordResponse>
					</Op>
				</Secure>
				<Secure Badges="User">
					<Op Name="LoadSelf">
						<Description>
							Load user's own record.
						</Description>
						<RecordResponse>
							<Field Name="Id" Type="dcUser:Id" />
							<Field Name="Username" Type="dcUser:dcUsername" />
							<Field Name="FirstName" Type="dcUser:dcFirstName" />
							<Field Name="LastName" Type="dcUser:dcLastName" />
							<Field Name="Email" Type="dcUser:dcEmail" />
							<Field Name="BackupEmail" Type="dcUser:dcBackupEmail" />
							<Field Name="Phone" Type="dcUser:dcPhone" />
							<Field Name="Address" Type="dcUser:dcAddress" />
							<Field Name="Address2" Type="dcUser:dcAddress2" />
							<Field Name="City" Type="dcUser:dcCity" />
							<Field Name="State" Type="dcUser:dcState" />
							<Field Name="Zip" Type="dcUser:dcZip" />
							<!-- TODO add
							<Field Name="Chronology" Type="dcUser:dcChronology" />
							<Field Name="Locale" Type="dcUser:dcLocale" />
							-->
						</RecordResponse>
					</Op>
					<Op Name="UpdateSelf">
						<Description>
							Update a user's own record.
						</Description>
						<RecordRequest Required="True">
							<Field Name="Username" Type="dcUser:dcUsername" Required="IfPresent" />
							<Field Name="FirstName" Type="dcUser:dcFirstName" Required="IfPresent" />
							<Field Name="LastName" Type="dcUser:dcLastName" Required="IfPresent" />
							<Field Name="Email" Type="dcUser:dcEmail" Required="IfPresent" />
							<Field Name="BackupEmail" Type="dcUser:dcBackupEmail" />
							<Field Name="Phone" Type="dcUser:dcPhone" />
							<Field Name="Password" Type="dcUser:dcPassword" Required="IfPresent" />
							<Field Name="Address" Type="dcUser:dcAddress" />
							<Field Name="Address2" Type="dcUser:dcAddress2" />
							<Field Name="City" Type="dcUser:dcCity" />
							<Field Name="State" Type="dcUser:dcState" />
							<Field Name="Zip" Type="dcUser:dcZip" />
							<!-- TODO add
							<Field Name="Chronology" Type="dcUser:dcChronology" />
							<Field Name="Locale" Type="dcUser:dcLocale" />
							-->
						</RecordRequest>
					</Op>
					<Op Name="RetireSelf">
						<Description>
							Remove user's own record.
						</Description>
					</Op>
				</Secure>
				<Secure Badges="Admin">
					<Op Name="Load">
						<Description>
							Load a user's record.
						</Description>
						<RecordRequest Required="True">
							<Field Name="Id" Type="dcUser:Id" Required="True" />
						</RecordRequest>
						<RecordResponse>
							<Field Name="Id" Type="dcUser:Id" />
							<Field Name="Username" Type="dcUser:dcUsername" />
							<Field Name="FirstName" Type="dcUser:dcFirstName" />
							<Field Name="LastName" Type="dcUser:dcLastName" />
							<Field Name="Email" Type="dcUser:dcEmail" />
							<Field Name="Phone" Type="dcUser:dcPhone" />
							<Field Name="BackupEmail" Type="dcUser:dcBackupEmail" />
							<Field Name="Address" Type="dcUser:dcAddress" />
							<Field Name="Address2" Type="dcUser:dcAddress2" />
							<Field Name="City" Type="dcUser:dcCity" />
							<Field Name="State" Type="dcUser:dcState" />
							<Field Name="Zip" Type="dcUser:dcZip" />
							<!-- TODO
							<Field Name="Chronology" Type="dcUser:dcChronology" />
							<Field Name="Locale" Type="dcUser:dcLocale" />
							-->
							<Field Name="Description" Type="dcUser:dcDescription" />
							<Field Name="Confirmed" Type="dcUser:dcConfirmed" />
							<!--
							<Field Name="Groups">
								<List Type="dcGroup:dcName" />
							</Field>
							-->
							<Field Name="Badges">
								<List Type="dcUser:dcBadges" />
							</Field>
						</RecordResponse>
					</Op>
					<Op Name="Update">
						<Description>
							Update a user's record.
						</Description>
						<RecordRequest Required="True">
							<Field Name="Id" Type="dcUser:Id" Required="True" />
							<Field Name="Username" Type="dcUser:dcUsername" Required="IfPresent" />
							<Field Name="FirstName" Type="dcUser:dcFirstName" />
							<Field Name="LastName" Type="dcUser:dcLastName" />
							<Field Name="Email" Type="dcUser:dcEmail" />
							<Field Name="BackupEmail" Type="dcUser:dcBackupEmail" />
							<Field Name="Phone" Type="dcUser:dcPhone" />
							<Field Name="Password" Type="dcUser:dcPassword" />
							<Field Name="Address" Type="dcUser:dcAddress" />
							<Field Name="Address2" Type="dcUser:dcAddress2" />
							<Field Name="City" Type="dcUser:dcCity" />
							<Field Name="State" Type="dcUser:dcState" />
							<Field Name="Zip" Type="dcUser:dcZip" />
							<!-- TODO
							<Field Name="Chronology" Type="dcUser:dcChronology" />
							<Field Name="Locale" Type="dcUser:dcLocale" />
							-->
							<Field Name="Description" Type="dcUser:dcDescription" />
							<Field Name="Confirmed" Type="dcUser:dcConfirmed" />
							<Field Name="Badges">
								<List Type="dcUser:dcBadges" />
							</Field>
						</RecordRequest>
					</Op>
					<Op Name="Add">
						<Description>
							Add a user record.
						</Description>
						<RecordRequest Required="True">
							<Field Name="Username" Type="dcUser:dcUsername" Required="True" />
							<Field Name="FirstName" Type="dcUser:dcFirstName" />
							<Field Name="LastName" Type="dcUser:dcLastName" />
							<Field Name="Email" Type="dcUser:dcEmail" />
							<Field Name="BackupEmail" Type="dcUser:dcBackupEmail" />
							<Field Name="Phone" Type="dcUser:dcPhone" />
							<Field Name="Address" Type="dcUser:dcAddress" />
							<Field Name="Address2" Type="dcUser:dcAddress2" />
							<Field Name="City" Type="dcUser:dcCity" />
							<Field Name="State" Type="dcUser:dcState" />
							<Field Name="Zip" Type="dcUser:dcZip" />
							<Field Name="Password" Type="dcUser:dcPassword" />
							<!-- TODO
							<Field Name="Chronology" Type="dcUser:dcChronology" />
							<Field Name="Locale" Type="dcUser:dcLocale" />
							-->
							<Field Name="Description" Type="dcUser:dcDescription" />
							<Field Name="Confirmed" Type="dcUser:dcConfirmed" />
							<Field Name="ConfirmCode" Type="dcUser:dcConfirmCode" />
							<Field Name="Badges">
								<List Type="dcUser:dcBadges" />
							</Field>
						</RecordRequest>
						<RecordResponse>
							<Field Name="Id" Type="dcUser:Id" />
						</RecordResponse>
					</Op>
					<Op Name="Retire">
						<Description>
							Remove (retire) user's record.
						</Description>
						<RecordRequest Required="True">
							<Field Name="Id" Type="dcUser:Id" Required="True" />
						</RecordRequest>
					</Op>
					<Op Name="Revive">
						<Description>
							Undo retirement of user's record.
						</Description>
						<RecordRequest>
							<Field Name="Id" Type="dcUser:Id" Required="True" />
						</RecordRequest>
					</Op>
					<Op Name="SetBadges">
						<Description>
							Set (replace) the authorization tags for each user listed.
						</Description>
						<RecordRequest Required="True">
							<Field Name="Users" Required="True">
								<List Type="dcUser:Id" />
							</Field>
							<Field Name="Badges" Required="True">
								<List Type="dcUser:dcBadges" />
							</Field>
						</RecordRequest>
					</Op>
					<Op Name="AddBadges">
						<Description>
							Add the authorization tags for each user listed.
						</Description>
						<RecordRequest Required="True">
							<Field Name="Users" Required="True">
								<List Type="dcUser:Id" />
							</Field>
							<Field Name="Badges" Required="True">
								<List Type="dcUser:dcBadges" />
							</Field>
						</RecordRequest>
					</Op>
					<Op Name="RemoveBadges">
						<Description>
							Remove the authorization tags for each user listed.
						</Description>
						<RecordRequest Required="True">
							<Field Name="Users" Required="True">
								<List Type="dcUser:Id" />
							</Field>
							<Field Name="Badges" Required="True">
								<List Type="dcUser:dcBadges" />
							</Field>
						</RecordRequest>
					</Op>
					<Op Name="UsernameLookup">
						<Description>
							Find user record id based on a user name.
						</Description>
						<RecordRequest Required="True">
							<Field Name="Username" Type="dcUser:dcUsername" Required="True" />
						</RecordRequest>
						<RecordResponse>
							<Field Name="UserId" Type="dcUser:Id" />
						</RecordResponse>
					</Op>
					<!--
					<Op Name="ListUsers">
						<Description>
							Load a list all user records, no matter how many.  Use with discretion.
						</Description>
						<ListResponse>
							<Record>
								<Field Name="Id" Type="dcUser:Id" />
								<Field Name="Username" Type="dcUser:dcUsername" />
								<Field Name="FirstName" Type="dcUser:dcFirstName" />
								<Field Name="LastName" Type="dcUser:dcLastName" />
								<Field Name="Email" Type="dcUser:dcEmail" />
							</Record>
						</ListResponse>
					</Op>
					-->
					<Op Name="Search">
						<Description>
							Load a list all user records for the given badges.
						</Description>
						<RecordRequest Required="True">
							<Field Name="Term" Type="dcSmallString" />
							<Field Name="Badges">
								<List Type="dcTinyString" />
							</Field>
						</RecordRequest>
						<ListResponse>
							<Record>
								<Field Name="Id" Type="dcUser:Id" />
								<Field Name="Username" Type="dcUser:dcUsername" />
								<Field Name="FirstName" Type="dcUser:dcFirstName" />
								<Field Name="LastName" Type="dcUser:dcLastName" />
								<Field Name="Email" Type="dcUser:dcEmail" />
								<Field Name="Phone" Type="dcUser:dcPhone" />
								<Field Name="Address" Type="dcUser:dcAddress" />
								<Field Name="City" Type="dcUser:dcCity" />
								<Field Name="State" Type="dcUser:dcState" />
								<Field Name="Zip" Type="dcUser:dcZip" />
								<Field Name="Location" Type="dcUser:dcLocation" />
								<Field Name="Badges">
									<List Type="dcUser:dcBadges" />
								</Field>
							</Record>
						</ListResponse>
					</Op>
				</Secure>
			</Feature>
		</Service>
	</Services>
</Schema>
